# =============================================
# DORAMAFLIX - DOCKER COMPOSE DEVELOPMENT
# Development setup with hot reload and debugging
# =============================================

version: '3.8'

networks:
  doramaflix-dev:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

services:
  postgres-dev:
    image: postgres:15-alpine
    container_name: doramaflix-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-doramaflix_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - doramaflix-dev

  redis-dev:
    image: redis:7-alpine
    container_name: doramaflix-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - doramaflix-dev

  rabbitmq-dev:
    image: rabbitmq:3.12-management-alpine
    container_name: doramaflix-rabbitmq-dev
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - doramaflix-dev

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: doramaflix-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password123@postgres-dev:5432/doramaflix_dev
      REDIS_URL: redis://redis-dev:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq-dev:5672
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-key
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    networks:
      - doramaflix-dev
    depends_on:
      - postgres-dev
      - redis-dev
      - rabbitmq-dev
    command: npm run dev

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: doramaflix-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3001:3000"
    networks:
      - doramaflix-dev
    depends_on:
      - backend-dev
    command: npm run dev