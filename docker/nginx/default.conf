# =============================================
# DORAMAFLIX - NGINX VIRTUAL HOST CONFIGURATION
# Production-ready configuration with caching and security
# =============================================

# Upstream servers
upstream backend {
    least_conn;
    server backend:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream frontend {
    least_conn;
    server frontend:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Cache zones
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=2g inactive=24h use_temp_path=off;
proxy_cache_path /var/cache/nginx/video levels=1:2 keys_zone=video_cache:10m max_size=10g inactive=7d use_temp_path=off;

# Rate limiting for different endpoints
map $request_uri $rate_limit_key {
    ~^/api/v1/auth/login    $binary_remote_addr;
    ~^/api/v1/auth/register $binary_remote_addr;
    ~^/api/v1/upload        $binary_remote_addr;
    default                 "";
}

# Bot detection
map $http_user_agent $is_bot {
    ~*googlebot 1;
    ~*bingbot 1;
    ~*facebookexternalhit 1;
    ~*twitterbot 1;
    ~*whatsapp 1;
    ~*crawler 1;
    ~*spider 1;
    default 0;
}

# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name doramaflix.com www.doramaflix.com api.doramaflix.com;
    
    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect everything else to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main frontend server (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name doramaflix.com www.doramaflix.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/doramaflix.com.crt;
    ssl_certificate_key /etc/nginx/ssl/doramaflix.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/doramaflix.com.ca-bundle;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Connection limits
    limit_conn conn_limit_per_ip 20;
    
    # Root and index
    root /var/www/html;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/doramaflix.access.log detailed;
    error_log /var/log/nginx/doramaflix.error.log warn;
    
    # Static file caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        
        # CORS for fonts and assets
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        proxy_pass http://frontend;
        proxy_cache static_cache;
        proxy_cache_valid 200 302 24h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Video files with special handling
    location ~* \.(mp4|webm|ogg|avi|mov|wmv|flv|mkv)$ {
        expires 7d;
        add_header Cache-Control "public";
        add_header X-Cache-Status "VIDEO";
        
        # Enable range requests for video streaming
        add_header Accept-Ranges bytes;
        
        proxy_pass http://backend;
        proxy_cache video_cache;
        proxy_cache_valid 200 206 7d;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Large file support
        proxy_max_temp_file_size 2048m;
        proxy_buffering off;
    }
    
    # API routes (no caching for dynamic content)
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Add request ID for tracing
        proxy_set_header X-Request-ID $request_id;
        
        # Security
        proxy_hide_header X-Powered-By;
        add_header X-Request-ID $request_id;
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/v1/auth/(login|register) {
        limit_req zone=login burst=5 nodelay;
        limit_req zone=register burst=2 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Additional security for auth
        proxy_hide_header X-Powered-By;
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
    }
    
    # Upload endpoints with file size limits
    location /api/v1/upload {
        limit_req zone=upload burst=1 nodelay;
        
        client_max_body_size 100m;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Disable buffering for large uploads
        proxy_request_buffering off;
        proxy_buffering off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://frontend;
        proxy_set_header Host $host;
    }
    
    # Metrics endpoint for monitoring
    location /metrics {
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
    }
    
    # All other requests to frontend
    location / {
        # Block bad bots
        if ($is_bot = 1) {
            return 403;
        }
        
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Enable caching for some frontend routes
        location ~* ^/(browse|search|watch)/ {
            proxy_pass http://frontend;
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout updating;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ^/(\.user.ini|\.htaccess|\.htpasswd|\.DS_Store|thumbs\.db)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}

# API subdomain server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.doramaflix.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/api.doramaflix.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.doramaflix.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/api.doramaflix.com.ca-bundle;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CORS for API
    add_header 'Access-Control-Allow-Origin' 'https://doramaflix.com' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    
    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://doramaflix.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    
    # Rate limiting
    limit_req zone=api burst=50 nodelay;
    limit_conn conn_limit_per_ip 10;
    
    # Logging
    access_log /var/log/nginx/api.doramaflix.access.log detailed;
    error_log /var/log/nginx/api.doramaflix.error.log warn;
    
    # All requests to backend
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-ID $request_id;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Security
        proxy_hide_header X-Powered-By;
        add_header X-Request-ID $request_id;
    }
}

# Status page for monitoring
server {
    listen 8080;
    server_name localhost;
    
    access_log off;
    
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    location /health {
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}