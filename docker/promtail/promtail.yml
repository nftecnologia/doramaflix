# =============================================
# DORAMAFLIX - PROMTAIL CONFIGURATION
# Log collection and forwarding configuration
# =============================================

server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # DoramaFlix Backend Application Logs
  - job_name: doramaflix-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: doramaflix-backend
          service: backend
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/doramaflix/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            method: method
            url: url
            status: statusCode
            duration: duration
            user_id: userId
            ip: ip
            error: error
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:
          method:
          status:

  # DoramaFlix Frontend Logs (Next.js)
  - job_name: doramaflix-frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: doramaflix-frontend
          service: frontend
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/doramaflix/frontend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            component: component
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:
          component:

  # Nginx Access Logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: access
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<request_uri>\S+) (?P<server_protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - timestamp:
          source: time_local
          format: "02/Jan/2006:15:04:05 -0700"
      - labels:
          method:
          status:
      - static_labels:
          log_type: access

  # Nginx Error Logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: error
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "2006/01/02 15:04:05"
      - labels:
          level:
      - static_labels:
          log_type: error

  # PostgreSQL Logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: database
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000 MST"
      - labels:
          level:
      - static_labels:
          service: database

  # Redis Logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>\S+) (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "02 Jan 2006 15:04:05.000"
      - labels:
          level:
          role:
      - static_labels:
          service: cache

  # Docker Container Logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          service: docker
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            timestamp: time
            container_name: attrs.name
            container_id: attrs.id
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
      - output:
          source: log

  # System Logs (syslog)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<process>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "Jan 02 15:04:05"
          fallback_formats:
            - "Jan  2 15:04:05"
      - labels:
          hostname:
          process:
      - static_labels:
          service: system

  # Security Logs (auth.log)
  - job_name: auth
    static_configs:
      - targets:
          - localhost
        labels:
          job: auth
          service: security
          environment: "${ENVIRONMENT:-production}"
          __path__: /var/log/auth.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<process>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "Jan 02 15:04:05"
          fallback_formats:
            - "Jan  2 15:04:05"
      - labels:
          hostname:
          process:
      - static_labels:
          service: security