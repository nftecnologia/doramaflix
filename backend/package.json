{
  "name": "doramaflix-backend",
  "version": "1.0.0",
  "description": "DoramaFlix Backend API - Netflix-like streaming platform",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "dev": "concurrently \"tsc -w\" \"nodemon dist/index.js\"",
    "start": "node dist/index.js",
    "start:dev": "ts-node -r tsconfig-paths/register src/index.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "jest --config jest.e2e.config.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "typecheck": "tsc --noEmit",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:migrate:prod": "prisma migrate deploy",
    "db:seed": "ts-node -r tsconfig-paths/register prisma/seed.ts",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "docker:prod": "docker-compose up",
    "clean": "rimraf dist",
    "prepare": "husky install"
  },
  "keywords": [
    "nodejs",
    "express",
    "typescript",
    "clean-architecture",
    "streaming",
    "video",
    "netflix",
    "dorama",
    "api"
  ],
  "author": "DoramaFlix Team",
  "license": "MIT",
  "dependencies": {
    "@prisma/client": "^5.7.1",
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.5",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "compression": "^1.7.4",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "bcrypt": "^5.1.1",
    "jsonwebtoken": "^9.0.2",
    "dotenv": "^16.3.1",
    "multer": "^1.4.5-lts.1",
    "redis": "^4.6.11",
    "amqplib": "^0.10.3",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "joi": "^17.11.0",
    "zod": "^3.22.4",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "reflect-metadata": "^0.1.13",
    "axios": "^1.6.2",
    "stripe": "^14.9.0",
    "mercadopago": "^1.5.17",
    "nodemailer": "^6.9.7",
    "handlebars": "^4.7.8",
    "sharp": "^0.32.6",
    "ffmpeg-static": "^5.2.0",
    "fluent-ffmpeg": "^2.1.2",
    "@vercel/blob": "^0.15.1",
    "@aws-sdk/client-s3": "^3.459.0",
    "@aws-sdk/s3-request-presigner": "^3.459.0",
    "uuid": "^9.0.1",
    "date-fns": "^2.30.0",
    "lodash": "^4.17.21",
    "cookie-parser": "^1.4.6",
    "express-session": "^1.17.3",
    "connect-redis": "^7.1.0",
    "@sentry/node": "^7.81.1",
    "@sentry/tracing": "^7.81.1",
    "@sentry/profiling-node": "^1.3.1"
  },
  "devDependencies": {
    "@types/amqplib": "^0.10.4",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.6",
    "@types/express-session": "^1.17.10",
    "@types/fluent-ffmpeg": "^2.1.24",
    "@types/jest": "^29.5.8",
    "@types/lodash": "^4.14.202",
    "@types/morgan": "^1.9.9",
    "@types/nodemailer": "^6.4.14",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "prisma": "^5.7.1",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src", "<rootDir>/tests"],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/index.ts",
      "!src/shared/config/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1"
    }
  }
}